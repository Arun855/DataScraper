JFDML JFormDesigner: "8.0.1.0.199" Java: "17.0.5" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormWindow( "javax.swing.JFrame", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
			"$layoutConstraints": "insets 0,hidemode 3,gap 7 7"
			"$columnConstraints": "[grow 1,fill][fill][fill][fill][fill][fill][fill][fill][grow 1,fill][fill][fill][fill][fill][fill][grow 1,fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill]"
			"$rowConstraints": "[][][][18:0,grow 1,fill][][][][][][][fill][fill][][][fill][fill][0,fill][86,grow 1,fill][21,grow 1,fill][][86,grow 1,fill][21,grow 1,fill][][][][]"
		} ) {
			name: "this"
			"$sizePolicy": 1
			"background": new java.awt.Color( 255, 204, 204, 255 )
			"foreground": sfield java.awt.Color orange
			"title": "RedditDataScraper"
			"defaultCloseOperation": 3
			"visible": true
			"resizable": false
			"font": new java.awt.Font( "Dialog", 0, 14 )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
				"$layoutConstraints": "hidemode 3"
				"$columnConstraints": "[fill][fill][fill][fill][fill][fill][fill][fill][fill][fill][fill]"
				"$rowConstraints": "[][][][][][][][][][]"
			} ) {
				name: "filterPanel"
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "subredditFilterLabel"
					"text": "Subreddit Filter"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 1"
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "subredditTextField"
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 1 1 8 1"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "noNsfwCheckBox"
					"text": "No NSFW Filter"
					"selected": true
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 3 3 1"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "keywordCheckBox"
					"text": "Keyword Filter"
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
					addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "keywordCheckBoxItemStateChanged", true ) )
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 5 3"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "regexCheckBox"
					"text": "Regex Filter"
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
					addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "regexCheckBoxItemStateChanged", true ) )
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 7 3 4 1"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "noSpoilerCheckBox"
					"text": "No Spoiler Filter"
					"selected": true
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 4 2 1"
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "keywordTextField"
					"enabled": false
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 5 4 4 1"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "scoreFilterCheckBox"
					"text": "Score Filter"
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
					addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "scoreFilterCheckBoxItemStateChanged", true ) )
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 6 4 1"
				} )
				add( new FormComponent( "javax.swing.JFormattedTextField" ) {
					name: "scoreMinTextField"
					"text": "0"
					"enabled": false
					"minimumSize": &Dimension0 new java.awt.Dimension( 100, 38 )
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
						"JavaCodeGenerator.preCreateCode": "//Source: https://stackoverflow.com/questions/11093326/restricting-jtextfield-input-to-integers\nNumberFormat format = NumberFormat.getInstance();\nNumberFormatter formatter = new NumberFormatter(format);\n\nformatter.setValueClass(Integer.class);\nformatter.setMinimum(0);\nformatter.setMaximum(Integer.MAX_VALUE);\nformatter.setAllowsInvalid(false);\nformatter.setCommitsOnValidEdit(true);\n// End of Source"
						"JavaCodeGenerator.customCreateCode": "new JFormattedTextField(formatter);"
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 5 6"
				} )
				add( new FormComponent( "javax.swing.JFormattedTextField" ) {
					name: "commentCountMinTextField"
					"text": "0"
					"enabled": false
					"minimumSize": new java.awt.Dimension( 100, 38 )
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
						"JavaCodeGenerator.customCreateCode": "new JFormattedTextField(formatter);"
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 5 8"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "scoreMinLabel"
					"text": "Min"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 6 6"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "scoreMaxLabel"
					"text": "Max"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 9 6"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "commentCountFilterCheckBox"
					"text": "Comment Count Filter"
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
					addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "commentCountFilterCheckBoxItemStateChanged", true ) )
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 8 4 1"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "commentCountMinLabel"
					"text": "Min"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 6 8"
				} )
				add( new FormComponent( "javax.swing.JFormattedTextField" ) {
					name: "scoreMaxTextField"
					"text": "0"
					"enabled": false
					"minimumSize": #Dimension0
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
						"JavaCodeGenerator.customCreateCode": "new JFormattedTextField(formatter);"
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 7 6 2 1"
				} )
				add( new FormComponent( "javax.swing.JFormattedTextField" ) {
					name: "commentCountMaxTextField"
					"text": "0"
					"enabled": false
					"minimumSize": new java.awt.Dimension( 100, 38 )
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
						"JavaCodeGenerator.customCreateCode": "new JFormattedTextField(formatter);"
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 7 8 2 1"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "commentCountMaxLabel"
					"text": "Max"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 9 8"
				} )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 1 2 18 12,hmax 250"
			} )
			add( new FormComponent( "javax.swing.JFormattedTextField" ) {
				name: "pageTextField"
				"text": "1"
				"minimumSize": sfield com.jformdesigner.model.FormObject NULL_VALUE
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
					"JavaCodeGenerator.customCreateCode": "new JFormattedTextField(pageFormatter);"
					"JavaCodeGenerator.preCreateCode": "NumberFormat pageFormat = NumberFormat.getInstance();\nNumberFormatter pageFormatter = new NumberFormatter(pageFormat);\n\npageFormatter.setValueClass(Integer.class);\npageFormatter.setMinimum(1);\npageFormatter.setMaximum(250);\npageFormatter.setAllowsInvalid(false);\npageFormatter.setCommitsOnValidEdit(true);"
				}
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 25 3 4 2"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "redditSortSettingsCheckBox"
				"text": "# of pages"
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 3 4 2,alignx center,growx 0"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "resetBox"
				"text": "Reset"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "reset", false ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 30 3 7 2"
			} )
			add( new FormComponent( "javax.swing.JComboBox" ) {
				name: "redditSortComboBox"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
					"JavaCodeGenerator.preInitCode": "addRedditComboBoxItems();"
				}
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 6 9 1"
			} )
			add( new FormComponent( "javax.swing.JComboBox" ) {
				name: "timeComboBox"
				"selectedIndex": 1
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
					"JavaCodeGenerator.preInitCode": "timeComboBox.addItem(TimePeriod.HOUR);\ntimeComboBox.addItem(TimePeriod.DAY);\ntimeComboBox.addItem(TimePeriod.WEEK);\ntimeComboBox.addItem(TimePeriod.MONTH);\ntimeComboBox.addItem(TimePeriod.YEAR);\ntimeComboBox.addItem(TimePeriod.ALL);"
				}
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 30 6 7 1"
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "azSort"
				"text": "Title Sort"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "azSortItemStateChanged", true ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 8 9 1"
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "zaSort"
				"text": "Title Sort Reverse"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "zaSortItemStateChanged", true ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 30 8 7 1"
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "scoreSortMax"
				"text": "Score Sort by Max"
				"selected": true
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "scoreSortMaxItemStateChanged", true ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 9 9 2"
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "scoreSortMin"
				"text": "Score Sort by Min"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ItemListener", "itemStateChanged", "scoreSortMinItemStateChanged", true ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 30 9 7 2"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "searchButton"
				"text": "Search"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "search", false ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 11 9 3"
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "saveButton"
				"text": "Save Result"
				auxiliary() {
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "save", false ) )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 30 11 7 3"
			} )
			add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
				name: "resultScrollPane"
				add( new FormComponent( "javax.swing.JTextArea" ) {
					name: "resultTextArea"
					"cursor": new java.awt.Cursor( 2 )
					"font": new java.awt.Font( "Segoe UI", 0, 16 )
					"foreground": sfield java.awt.Color black
					auxiliary() {
						"JavaCodeGenerator.variableGetter": true
					}
				} )
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 2 14 35 9"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "loginLabel"
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 2 23 12 2,alignx left,growx 0"
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "clientIdLabel"
			}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
				"value": "cell 20 23 17 2,alignx right,growx 0"
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 65, 0 )
			"size": new java.awt.Dimension( 1080, 750 )
		} )
	}
}
